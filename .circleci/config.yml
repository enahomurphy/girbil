version: 2.1

orbs:
  aws-code-deploy: circleci/aws-code-deploy@1.0.0
  aws-cli: circleci/aws-cli@0.1.22

jobs:
  # STAGING FRONTEND
  deploy-staging-web:
    working_directory: ~/giribil-web
    docker:
      - image: circleci/node:10.13.0 
    steps:
      - checkout
      - run:
          name: Setup Environment Variables
          command: |
            echo "export GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID" >> web/.env
            echo "export API_URL=$API_URL" >> web/.env
            echo "export GIRBIL_WEB_STAGING_S3_CLIENT=$GIRBIL_WEB_STAGING_S3_CLIENT" >> $BASH_ENV
            echo "export GIRBIL_WEB_STAGING_CLOUNDFRONT_ID=$GIRBIL_WEB_STAGING_CLOUNDFRONT_ID" >> $BASH_ENV
      - restore_cache:
          key: dependency-cache-{{ checksum "web/package.json" }}
      - restore_cache:
          key: dependency-cache-{{ checksum "shared/package.json" }}
      - run:
          name: Install Web Packages
          command: cd web/ && yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "web/package.json" }}
          paths:
            - ./web/node_modules
      - run:
          name: Install Shared Packages
          command: cd shared/ && yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "shared/package.json" }}
          paths:
            - ./shared/node_modules
      - run:
          name: deploy client app
          command: |
            sudo apt-get install awscli
            aws configure set preview.cloudfront true
            sh scripts/deploy-web.sh

  deploy-staging-api:
    docker:
      - image: circleci/node:12.16.1 
    executor: aws-cli/default
    parameters:
      deploy-application:
        type: string
      deploy-bucket:
        type: string
      deploy-bucket-key:
        type: string
    steps:
      - checkout
      - aws-cli/setup
      - restore_cache:
          key: dependency-cache-{{ checksum "api/package.json" }}
      - run:
          name: Install Packages
          command: cd api/ && yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "api/package.json" }}
          paths:
            - ./api/node_modules
      - run:
          name: deploy api app
          command: |
            cd api
            sudo npm install -g typescript
            sudo tsc
            sudo cp ormconfig.prod.js ormconfig.js
            sudo rm -rf node_modules
            sudo rm -rf src
      - run:
          name: deploy api app
          command: |
            aws deploy push \
              --application-name << parameters.deploy-application >> \
              --source ./api \
              --s3-location s3://<< parameters.deploy-bucket >>/<< parameters.deploy-bucket-key >>.zip
      - aws-code-deploy/deploy-bundle:
          application-name: girbil
          bundle-bucket: girbil-server
          bundle-key: girbil-staging
          deployment-group: girbil-staging

workflows:
  deploy_staging_web:
    jobs:
      - deploy-staging-web:
          filters:
            branches:
              only: staging

  deploy_staging_api:
    jobs:
      - deploy-staging-api:
          deploy-application: girbil
          deploy-bucket: girbil-server
          deploy-bucket-key: girbil-staging
          filters:
            branches:
              only: master